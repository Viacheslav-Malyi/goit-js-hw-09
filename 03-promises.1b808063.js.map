{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAASH,SAASC,cAAc,mBAItC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MAZMN,SAASC,cAAc,SAC/Ba,iBAAiB,UAetB,SAAyBC,GACvBA,EAAMC,iBAEN,IAAIC,EAAkBC,OAAOnB,EAAWoB,OACpCC,EAAiBF,OAAOhB,EAAUiB,OAClCE,EAAcH,OAAOf,EAAOgB,OAEhC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrClB,EAAckB,EAAGL,GACdM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBrB,QAAiBC,UAGzCqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoBvB,QAAeC,UAGzCW,GAAmBG","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\nform.addEventListener('submit', formPromisSbmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction formPromisSbmit(event) {\n  event.preventDefault();\n\n  let firstDelayInput = Number(firstDelay.value);\n  let delayStepInput = Number(delayStep.value);\n  let amountInput = Number(amount.value);\n\n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, firstDelayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    firstDelayInput += delayStepInput;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","firstDelayInput","Number","value","delayStepInput","amountInput","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.1b808063.js.map"}